# Escalibur Exploitation Framework

import subprocess
import os

def execute_command(command):
    try:
        result = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT)
        return result.decode()
    except Exception as e:
        return str(e)

def list_files(directory="."):
    try:
        files = os.listdir(directory)
        return "\n".join(files)
    except Exception as e:
        return str(e)

def show_system_info():
    try:
        uname = execute_command("uname -a")
        hostname = execute_command("hostname")
        ip_address = execute_command("hostname -I")
        return f"Hostname: {hostname}\nIP Address: {ip_address}\nSystem Info: {uname}"
    except Exception as e:
        return str(e)

def escalate_privileges():
    try:
        if os.getuid() != 0:
            return execute_command("sudo -l")
        else:
            return "Already running with root privileges."
    except Exception as e:
        return str(e)

def show_exploit(exploit_number):
    try:
        with open("exploits.txt", "r") as f:
            exploits = f.read().strip().split("\n\n")
            selected_exploit = exploits[exploit_number - 1]
            return selected_exploit
    except Exception as e:
        return str(e)

def main():
    print("Welcome to Escalibur Exploitation Framework!")
    print("Type 'help' to see available commands.")

    while True:
        user_input = input("> ")
        if user_input.lower() == "exit":
            print("Exiting...")
            break
        elif user_input.lower() == "help":
            print("Available commands:")
            print(" - execute <command>: Execute a shell command")
            print(" - list_files [<directory>]: List files in the current directory or specified directory")
            print(" - system_info: Show system information")
            print(" - escalate_privileges: Attempt to escalate privileges")
            print(" - show_exploit <exploit_number>: Show information about a specific exploit")
            print(" - exit: Exit the framework")
        elif user_input.startswith("execute"):
            command = user_input.split(" ", 1)[1]
            output = execute_command(command)
            print(output)
        elif user_input.startswith("list_files"):
            directory = user_input.split(" ", 1)[1] if len(user_input.split(" ")) > 1 else "."
            output = list_files(directory)
            print(output)
        elif user_input.lower() == "system_info":
            output = show_system_info()
            print(output)
        elif user_input.lower() == "escalate_privileges":
            output = escalate_privileges()
            print(output)
        elif user_input.startswith("show_exploit"):
            try:
                exploit_number = int(user_input.split(" ")[1])
                output = show_exploit(exploit_number)
                print(output)
            except ValueError:
                print("Invalid exploit number.")
            except IndexError:
                print("Exploit number out of range.")
        else:
            print("Invalid command. Type 'help' for available commands.")

if __name__ == "__main__":
    main()
